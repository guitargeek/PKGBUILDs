--- classlib-3.1.3/src/iobase/TempFile.cpp	2019-07-24 17:09:47.562445770 +0200
+++ classlib-3.1.3/src/iobase/TempFile.cpp	2019-07-24 17:11:23.209108176 +0200
@@ -48,7 +48,7 @@
 
 /** Create a unique temporary directory.  */
 template <typename T>
-inline typename define_if<(sizeof((char * (*) (char *)) &mkdtemp) > 0), T>::type
+inline typename define_if<(sizeof((char * (*) (char *)) &mkdtemp) != 0), T>::type
 domkdtemp(T path, void *)
 { return mkdtemp(path); }
 
@@ -59,7 +59,7 @@
 
 /** Find a temporary file name.  Never use this.  */
 template <typename T>
-inline typename define_if<(sizeof((char * (*) (char *)) &mktemp) > 0), T>::type
+inline typename define_if<(sizeof((char * (*) (char *)) &mktemp) != 0), T>::type
 domktemp(T path, void *)
 { return mktemp(path); }
 
@@ -70,7 +70,7 @@
 
 /** Create a unique temporary file.  */
 template <typename R, typename T>
-inline typename define_if<(sizeof((int (*) (char *)) &mkstemp) > 0), R>::type
+inline typename define_if<(sizeof((int (*) (char *)) &mkstemp) != 0), R>::type
 domkstemp(T path, void *)
 { return mkstemp(path); }
 
@@ -81,7 +81,7 @@
 
 /** Create a unique temporary file.  */
 template <typename R, typename T, typename U>
-inline typename define_if<sizeof(((int (*) (char *, int)) &mkstemps) > 0), R>::type
+inline typename define_if<sizeof(((int (*) (char *, int)) &mkstemps) != 0), R>::type
 domkstemps(T path, U suffixlen, void *)
 { return mkstemps(path, suffixlen); }
 
